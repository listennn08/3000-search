{"version":3,"sources":["components/CountySelect.js","components/TownshipSelect.js","utils/index.js","components/CusTable.js","page/SearchTable.js","components/Legend.js","components/SearchArea.js","components/Icon.js","page/PostOfficeMap.js","App.js","serviceWorker.js","index.js"],"names":["CountySelect","props","optionsItem","options","map","el","index","value","val","key","text","Row","className","Col","md","FormControl","as","custom","onChange","e","name","filter","target","setCounty","selected","selectedName","setTownship","bind","county","disabled","TownshipSelect","useState","setOptions","useEffect","$","get","resp","find","length","data","html","replace","township","getColor","admissible","remaining","includes","percent","CusTable","setData","updateTime","setUpdateTime","page","setPage","totalPage","setTotalPage","active","setActive","loading","setLoading","axios","then","respData","hsnCd","townNm","d","n","p","Math","floor","push","slice","listItem","lg","random","toString","substring","Card","style","busiMemo","total","Body","Title","storeNm","Text","tel","dangerouslySetInnerHTML","__html","busiTime","Button","onClick","window","open","zipCd","addr","latitude","longitude","focus","title","variant","changePage","i","items","number","pageNumber","Pagination","Item","Ellipsis","paginationBasic","First","Prev","Next","Last","Spinner","animation","role","SearchTable","Container","fluid","Legend","colorObjs","color","legend","L","control","position","onAdd","div","DomUtil","create","innerHTML","reduce","pre","MapControl","withLeaflet","SearchArea","selectedCounty","setSelectedCounty","selectedTownship","setSelectedTownship","listItemsDisplay","setListItemsDisplay","searchKeywords","setSearchKeywords","show","setShow","selectCounty","countyName","findIndex","countyID","RegExp","getTownship","listItems","listData","source","searchItem","includeKeywords","aria-label","selectTownship","onKeyUp","placeholder","hsnNm","setPosition","String","fromCharCode","Icon","svgTemplate","divIcon","iconSize","iconAnchor","popupAnchor","mapStyle","width","height","PostOfficeMap","setListItems","zoom","setZoom","navigator","geolocation","watchPosition","coords","Map","center","zoomControl","ZoomControl","TileLayer","url","attribution","Marker","icon","Popup","item","lat1","lon1","lat2","lon2","unit","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","distance","App","Navbar","bg","expand","Brand","href","Nav","NavLink","Link","to","exact","path","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b931daf8.chunk.js","sourcesContent":["import React from 'react';\nimport { FormControl, Row, Col } from 'react-bootstrap';\n\nconst CountySelect = (props) => {\n  const optionsItem = props.options.map((el, index) => <option value={ el.val } key={ index }>{ el.text }</option>);\n  const getCounty = (e) => {\n    const name = props.options.filter((el) => el.val === e.target.value)[0].text;\n\n    props.setCounty({\n      selected: e.target.value,\n      selectedName: name\n    });\n    props.setTownship({\n        selected: '',\n        selectedName: '',\n    });\n  }\n  return (\n    <Row className='justify-content-md-center mt-2 mb-2'>\n      <Col md='5'>\n        <FormControl as='select' custom\n            onChange={ getCounty.bind(this) }\n            value={ props.county.selected }\n        >\n          <option value='' disabled>---請選擇縣市---</option>\n          { optionsItem }\n        </FormControl>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CountySelect;\n","import React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport { FormControl, Row, Col } from 'react-bootstrap';\n\nconst TownshipSelect = (props) => {\n  const [ options, setOptions ] = useState([]);\n  useEffect(() => {\n    const getOptionsItem = () => {\n      if (props.county.selected) {\n        $.get(`https://api.nlsc.gov.tw/other/ListTown1/${props.county.selected}`,\n        (resp) => {\n          if ($(resp).find('townItem').length > 0) {\n            const data = [...$(resp).find('townItem')]\n              .filter((el) => $(el).find('towncode01').html())\n              .map((el) => {\n                $(el).find('townname').html(\n                  $(el).find('townname').html().replace(/(臺灣|福建)省/, '')\n                );\n                return {\n                  text: $(el).find('townname').html().replace(props.county.selectedName, ''),\n                  val: $(el).find('townname').html().replace(props.county.selectedName, ''),\n                }\n              });\n            setOptions(data);\n          }\n        })\n      }\n    }\n    getOptionsItem();\n  }, [props.county.selected, props.county.selectedName]);\n  const getTownship = (e) => {\n    props.setTownship({\n      selected: e.target.value,\n      selectedName: e.target.value,\n    });\n  }\n  const optionsItem = options.map((el, index) => <option value={ el.val } key={ index }>{ el.text }</option>);\n  \n  return ( props.county.selected &&\n    <Row className='justify-content-md-center mb-2 mt-2'>\n      <Col md='5'>\n        <FormControl as='select' custom\n          onChange={ getTownship.bind(this) }\n          value={ props.township.selected }\n        >\n          <option value='' disabled>---請選擇鄉鎮市區---</option>\n          { optionsItem }\n        </FormControl>\n      </Col>\n    </Row>\n  )\n}\n\nexport default TownshipSelect;\n","export const getColor = (admissible, remaining) => {\n  if (admissible) {\n    admissible = admissible.replace(/.*(?:<br>|^)+\\*(.*)<br>/, '$1').replace(/本日可受理量：(\\w+)/, '$1');\n    if (admissible.includes('本日未營業')) return '#c0c0c0';\n    const percent = (remaining/admissible) * 100;\n    switch (true) {\n      case percent > 80:\n        return \"#8d8\";\n      case percent > 50:\n        return \"#fa0\";\n      case percent > 30:\n        return \"#f00\";\n      default:\n        return \"#c0c0c0\";\n    }\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pagination, Spinner, Card, Row, Col, Button } from 'react-bootstrap';\nimport { getColor } from '../utils';\nimport './CusTable.scss';\n\nconst CusTable = (props) => {\n  const [data, setData] = useState([]);\n  const [updateTime, setUpdateTime] = useState('');\n  const [page, setPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n  const [active, setActive] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const perPage = 48;\n\n  useEffect(() => {\n    const fetch = () => {\n      setLoading(true);\n      axios\n        .get('https://3000.gov.tw/hpgapi-openmap/api/getPostData')\n        .then((resp) => {\n          const respData = resp.data\n            .filter((el) => props.county.selected \n              ? el.hsnCd === props.county.selected \n              : el\n            )\n            .filter((el) => props.township.selected \n              ? el.townNm === props.township.selected \n              : el\n            );\n          const d = [];\n          let n = 0;\n          const p = Math.floor(respData.length / perPage);\n          for (n; n < p; n++) {\n            d.push(respData.slice(n * perPage, (n + 1) * perPage));\n          }\n          if (respData.length % perPage) {\n            d.push(respData.slice(n * perPage, respData.length))\n          }\n          setUpdateTime(respData[0].updateTime)\n          setData(d);\n          setTotalPage(p);\n          setLoading(false);\n          setActive(0);\n        });\n    }\n    fetch();\n  }, [props.county.selected, props.township.selected]);\n  const urlBase = 'https://www.google.com.tw/maps/place/';\n  let listItem;\n  if (data.length) {\n    listItem = data[page].map((el, index) => (\n      // <tr key={ index }>\n      //   <td className=\"desktop\">{ index + 1 }</td>\n      //   <td className=\"desktop\">{ el.hsnNm }</td>\n      //   <td>{ el.storeNm }</td>\n      //   <td><a href={`${urlBase}${el.zipCd}${el.addr.replace(/\\(.*\\)/, '')}/@${el.latitude},${el.longitude}`} title='打開 google 地圖' target='_bland'>{ el.addr }</a></td>\n      //   <td className=\"desktop\">{ el.tel }</td>\n      //   <td>{ el.busiTime.split('<br>').map((el, index) => <div key={`busiT${index}`}>{el}</div>) }</td>\n      //   <td>{ el.busiMemo.split('<br>').map((el, index) => <div key={`busiM${index}`}>{el}</div>) }</td>\n      //   <td>{ el.total }</td>\n      // </tr>\n      <Col lg=\"3\" className=\"mb-2\" key={Math.random().toString(36).substring(2, 9)}>\n        <Card style={{'background': getColor(el.busiMemo, el.total)}}>\n          <Card.Body>\n            <Card.Title>{el.storeNm}</Card.Title>\n            <Card.Text className=\"mb-1\">\n              聯絡電話：{el.tel}<br />\n              <span dangerouslySetInnerHTML={{__html: el.busiTime}} />\n              <span dangerouslySetInnerHTML={{__html: el.busiMemo}} />\n              存量：{el.total}\n            </Card.Text>\n            <Button\n              onClick={() => { window.open(`${urlBase}${el.zipCd}${el.addr.replace(/\\(.*\\)/, '')}/@${el.latitude},${el.longitude}`, '_blank').focus() }}\n              title='打開 google 地圖'\n              variant=\"dark\"\n            >\n              {el.addr}\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    ));\n  }\n  const changePage = (i) => {\n    if (i > -1 && i <= totalPage) {\n      setPage(i);\n      setActive(i);\n    }\n  }\n\n  let items = [];\n  for (let number = 0; number < totalPage; number++) {\n    const pageNumber = number + 1\n    if (active < 3) {\n      if (pageNumber < active + 4 || pageNumber > totalPage - 4) {\n        items.push(\n          <Pagination.Item\n            key={ pageNumber }\n            active={ pageNumber === active }\n            onClick={ () => changePage(pageNumber) }\n          >\n            { pageNumber + 1 }\n          </Pagination.Item>,\n        );\n      } else if (pageNumber === active + 5) {\n        items.push(<Pagination.Ellipsis key='ellipsis-1' />)\n      }\n    } else {\n      if (\n        (pageNumber < 2 || pageNumber > active - 2) \n          && (pageNumber < active + 2 || pageNumber > totalPage - 2)\n      ) {\n        items.push(\n          <Pagination.Item\n            key={ pageNumber }\n            active={ pageNumber === active }\n            onClick={ () => changePage(pageNumber) }\n          >\n            { pageNumber + 1 }\n          </Pagination.Item>,\n        );\n      } else if (pageNumber === active - 2 ) {\n        items.push(<Pagination.Ellipsis key='ellipsis-1' />)\n      } else if (pageNumber === active + 2) {\n        items.push(<Pagination.Ellipsis key='ellipsis-2' />)\n      }\n    }\n  }\n\n  const paginationBasic = (\n      <div className='d-flex justify-content-center'>\n        <Pagination>\n          <Pagination.First onClick={() => changePage(1)} disabled={active === 0}></Pagination.First>\n          <Pagination.Prev onClick={() => changePage(page - 1)} disabled={active === 0}/>\n          <Pagination.Item key=\"0\" active={ active === 0 } onClick={() => changePage(0)}>1</Pagination.Item>\n          { items }\n          <Pagination.Next onClick={() => changePage(page + 1)} disabled={active === totalPage}/>\n          <Pagination.Last onClick={() => changePage(totalPage)} disabled={active === totalPage}></Pagination.Last>\n        </Pagination>\n      </div>\n  );\n  return (\n    <div className='overflow-hidden py-2'>\n      {loading\n        ? <div\n            className={'vh-100 d-flex align-items-center justify-content-center'}\n          >\n            <Spinner\n              animation='border'\n              role='status'\n            >\n              <span className='sr-only'>Loading...</span>\n            </Spinner>\n          </div>\n        :\n          <>      \n            <Row className=\"justify-content-end mb-1\"><Col className=\"text-right\">{updateTime}</Col></Row>\n            {/* <Table striped bordered hover className='w-100'>\n              <caption className='text-right'>更新時間：{ updateTime }</caption>\n              <thead>\n                <tr>\n                  <th className=\"desktop\">#</th>\n                  <th className=\"desktop\">縣市名稱</th>\n                  <th>分局名稱</th>\n                  <th>地址</th>\n                  <th className=\"desktop\">電話</th>\n                  <th>營業時間</th>\n                  <th>營業備註</th>\n                  <th>存量</th>\n                </tr>\n              </thead>\n              <tbody> */}\n              <Row>\n                {listItem}\n              </Row>\n              {/* </tbody>\n            </Table> */}\n            { paginationBasic }\n\n          </>\n      }\n    </div>\n  );\n};\n\nexport default CusTable;\n","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport CountySelect from  '../components/CountySelect';\nimport TownshipSelect from '../components/TownshipSelect';\nimport CusTable from '../components/CusTable';\n\nconst SearchTable = () => {\n  const cnOptions = [\n    { text: '臺北市', val: 'A' },\n    { text: '臺中市', val: 'B' },\n    { text: '基隆市', val: 'C' },\n    { text: '臺南市', val: 'D' },\n    { text: '高雄市', val: 'E' },\n    { text: '新北市', val: 'F' },\n    { text: '宜蘭縣', val: 'G' },\n    { text: '桃園市', val: 'H' },\n    { text: '新竹市', val: 'O' },\n    { text: '新竹縣', val: 'J' },\n    { text: '苗栗縣', val: 'K' },\n    { text: '南投縣', val: 'M' },\n    { text: '彰化縣', val: 'N' },\n    { text: '雲林縣', val: 'P' },\n    { text: '嘉義市', val: 'I' },\n    { text: '嘉義縣', val: 'Q' },\n    { text: '屏東縣', val: 'T' },\n    { text: '花蓮縣', val: 'U' },\n    { text: '臺東縣', val: 'V' },\n    { text: '澎湖縣', val: 'X' },\n    { text: '金門縣', val: 'W' },\n    { text: '連江縣', val: 'Z' },\n  ];\n  const [county, setCounty] = useState({\n    selected: '',\n    selectedName: '',\n  })\n  const [township, setTownship] = useState({\n    selected: '',\n    selectedName: '',\n  })\n\nreturn (\n  <>\n    <Container fluid>\n      <CountySelect\n        options={ cnOptions }\n        county={ county }\n        setCounty={ setCounty }\n        setTownship= { setTownship }\n      />\n      <TownshipSelect\n        county={ county }\n        township={ township }\n        setTownship={ setTownship }\n      />\n      <CusTable \n        county={ county } \n        township={ township }\n      />\n    </Container>\n  </>\n  );\n}\n\nexport default SearchTable;","import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from 'leaflet';\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {\n    const colorObjs = [\n      {\n        color: \"8d8\",\n        text: \"數量充足\"\n      },\n      {\n        color: \"fa0\",\n        text: \"數量少於一半\"\n      },\n      {\n        color: \"f00\",\n        text: \"數量極少\"\n      },\n      {\n        color: \"c0c0c0\",\n        text: \"已領完或未受理\"\n      },\n    ];\n\n    const legend = L.control({ position: \"bottomright\"});\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      div.innerHTML =  colorObjs.reduce((pre, el) => `${pre}\n        <div class=\"legend__lebel\">\n          <i style=\"background: #${el.color}\"></i>${el.text}\n        </div>  \n      `, '');\n      return div;\n    };\n\n    return legend;\n  }\n}\n\nexport default withLeaflet(Legend);","import React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport './SearchArea.scss';\n\nconst SearchArea = (props) => {\n  const [county, ] = useState([\n    { text: '臺北市', val: 'A' },\n    { text: '臺中市', val: 'B' },\n    { text: '基隆市', val: 'C' },\n    { text: '臺南市', val: 'D' },\n    { text: '高雄市', val: 'E' },\n    { text: '新北市', val: 'F' },\n    { text: '宜蘭縣', val: 'G' },\n    { text: '桃園市', val: 'H' },\n    { text: '新竹市', val: 'O' },\n    { text: '新竹縣', val: 'J' },\n    { text: '苗栗縣', val: 'K' },\n    { text: '南投縣', val: 'M' },\n    { text: '彰化縣', val: 'N' },\n    { text: '雲林縣', val: 'P' },\n    { text: '嘉義市', val: 'I' },\n    { text: '嘉義縣', val: 'Q' },\n    { text: '屏東縣', val: 'T' },\n    { text: '花蓮縣', val: 'U' },\n    { text: '臺東縣', val: 'V' },\n    { text: '澎湖縣', val: 'X' },\n    { text: '金門縣', val: 'W' },\n    { text: '連江縣', val: 'Z' },\n  ]);\n  const [township, setTownship] = useState([])\n  const [selectedCounty, setSelectedCounty] = useState('');\n  const [selectedTownship, setSelectedTownship] = useState('');\n  // const [listItems, setListItems] = useState([]);\n  const [listItemsDisplay, setListItemsDisplay] = useState([]);\n  const [searchKeywords, setSearchKeywords] = useState('');\n  const [show, setShow] = useState(true);\n  \n  const getTownship = (countyID, countyName) => {\n    $.get(`https://api.nlsc.gov.tw/other/ListTown1/${countyID}`, (resp) => {\n      if ($(resp).find('townItem').length > 0) {\n        const data = [...$(resp).find('townItem')]\n          .filter((el) => $(el).find('towncode01').html())\n          .map((el) => {\n            $(el).find('townname').html().replace(new RegExp(`(臺灣省|福建省)(${countyName})`), '')\n            return {\n              text: $(el).find('townname').html(),\n              val: $(el).find('townname').html(),\n            }\n          });\n        setTownship(data);\n      }\n    })\n  };\n  \n  const selectCounty = (e) => {\n    const countyName = county[county.findIndex((el) => el.val === e.target.value)].text;\n    setSelectedCounty(e.target.value);\n    getTownship(e.target.value, countyName);\n\n    /* Will clear selectedTownship when change selectedCounty */\n    setSelectedTownship('');\n  };\n  \n  const selectTownship = (e) => setSelectedTownship(e.target.value);\n  \n  const passData = (data) => {\n    props.setPosition([data.latitude, data.longitude]);\n    setShow(false);\n    props.setShow(false);\n  };\n  \n  const search = (e) => setSearchKeywords(e.target.value);\n\n  const toggleShow = () => {\n    setShow(!show);\n    props.setShow(!props.show);\n  }\n  const color = (admissible, remaining) => {\n    if (admissible.includes('本日未營業')) return 'red';\n    admissible = admissible.replace(/本日可受理量：(\\w+)/, '$1');\n    const percent = (remaining/admissible) * 100;\n    switch (true) {\n      case percent > 80:\n        return 'green';\n      case percent > 50:\n        return 'yellow';\n      case percent > 0:\n        return 'orange';\n      default:\n        return 'red';\n    }\n  }\n\n  useEffect(() => {\n    setListItemsDisplay(props.listItems);\n  }, [props.listItems]);\n  \n  useEffect(() => {\n    let listData;\n    const includeKeywords = (source, searchItem = 'storeNm') => {\n      return source.length > 0\n        ? searchKeywords ? source.filter((el) => el[searchItem].includes(searchKeywords)) : source\n        : source;\n    }\n    if (selectedCounty && selectedCounty !== '') {\n      if (selectedTownship  && selectedTownship !== '') {\n          listData = props.listItems.filter((el) => el.hsnCd === selectedCounty\n              && el.townNm === selectedTownship);\n      } else {\n        listData = props.listItems.filter((el) => el.hsnCd === selectedCounty);\n      }\n    } else {\n      listData = props.listItems;\n    }\n    setListItemsDisplay(includeKeywords(listData));\n  }, [selectedCounty, selectedTownship, searchKeywords, props.listItems]);\n  \n  \n  return (\n    <>\n      <button className={`searchBtn ${show ? 'show' : ''}`} onClick={ () => toggleShow() }><span role=\"img\" aria-label=\"string\">🔍</span></button>\n      <section className={`sidebar ${show ? '' : 'hide'}`}>\n        <div className=\"sidebar__container\">\n          <div className=\"select__container\">\n            <select className=\"select__item\" value={ selectedCounty } onChange={ (e) => selectCounty(e) }>\n              <option value=''>請選擇縣市</option>\n              { county.map((el) => <option value={ el.val } key={ el.val }>{ el.text }</option>) }\n            </select>\n            <select className=\"select__item\" value={ selectedTownship } onChange={ (e) => selectTownship(e) }>\n              <option value=''>請選擇鄉鎮市區</option>\n              { township.map((el) => <option value={ el.val } key={ el.val }>{ el.text }</option>) }\n            </select>\n            <input className=\"select__item\" onKeyUp={search} placeholder=\"請輸入欲搜尋郵局名稱\" />\n          </div>\n          <ul className=\"list\">{\n            listItemsDisplay.map((el) => (\n              <li className=\"list__card\" key={ el.storeNm }>\n                <div className=\"list__card__body\">\n                  { el.hsnNm }<br />\n                  <h1 className=\"list__card__body__title\">{ el.storeNm }</h1>\n                  { el.addr }<br />\n                  { el.busiMemo.replace(/.*(?:<br>|^)+\\*(.*)<br>/, '$1') }<br />\n                  剩餘數量：<span className={color(el.busiMemo.replace(/.*(?:<br>|^)+\\*(.*)<br>/, '$1'), el.total)}>{ el.total }</span><br />\n                  </div>\n                <button onClick={ () => passData(el) }>\n                  前往 {String.fromCharCode(0x00BB)}\n                  <span className=\"addr\"> { el.storeNm } </span>\n                </button>\n              </li>\n            ))\n          }\n          </ul>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default SearchArea;","import { divIcon } from 'leaflet';\n\nconst Icon = (color) => {\n  const svgTemplate = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" class=\"marker\">\n    <path stroke=\"#000000\" fill=\"${color}\" d=\"M15.938 32S6 17.938 6 11.938C6 .125 15.938 0 15.938 0S26 .125 26 11.875C26 18.062 15.938 32 15.938 32zM16 6c-2.209 0-4 1.791-4 4s1.791 4 4 4 4-1.791 4-4-1.791-4-4-4z\"/>\n  </svg>`;\n  return divIcon({\n    className: \"marker\",\n    html: svgTemplate,\n    iconSize: [40, 40],\n    iconAnchor: [12, 24],\n    popupAnchor: [7, -16]\n  });\n}\n\nexport default Icon;","import React, { useState, useEffect } from 'react';\nimport { Map, Marker, Popup, TileLayer, ZoomControl } from 'react-leaflet';\nimport Legend from '../components/Legend';\nimport $ from 'jquery';\nimport SearchArea from '../components/SearchArea';\nimport Icon from '../components/Icon';\nimport { getColor } from '../utils';\nimport 'leaflet/dist/leaflet.css'\nimport './PostOfficeMap.scss'\n\nconst userIconColor = '#1CA0E9';\n\nconst mapStyle = {\n  width: '100%',\n  height: '100%',\n}\n\nconst PostOfficeMap = () => {\n  const [show, setShow] = useState(true);\n  const [position, setPosition] = useState([22.627277, 120.301437]);\n  const [listItems, setListItems] = useState([]); // set data\n  const [zoom, setZoom] = useState(13);\n  \n  useEffect(() => {\n    $.get('https://3000.gov.tw/hpgapi-openmap/api/getPostData', (resp) => {\n      setListItems(resp);\n    });\n\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition((position) => {\n        setPosition([position.coords.latitude, position.coords.longitude]);\n      })\n    }\n  }, []);\n\n  useEffect(() => {\n    setZoom(18);\n  }, [position]);\n\n\n  const  distance = (lat1, lon1, lat2, lon2, unit = \"K\") => {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n      return 0;\n    }\n    const radlat1 = Math.PI * lat1 / 180;\n    const radlat2 = Math.PI * lat2 / 180;\n    const theta = lon1 - lon2;\n    const radtheta = Math.PI * theta / 180;\n    let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    if (dist > 1) {\n      dist = 1;\n    }\n    dist = Math.acos(dist);\n    dist = dist * 180 / Math.PI;\n    dist = dist * 60 * 1.1515;\n    if (unit === \"K\") {\n      dist = dist * 1.609344\n    }\n    if (unit === \"N\") {\n      dist = dist * 0.8684\n    }\n\n    return dist;\n  }\n\n  return (\n    <>\n      <SearchArea\n        setShow={setShow}\n        show={show}\n        setPosition={setPosition}\n        listItems={listItems}\n      />\n      <div className={'mainMap ' + (show ? 'show' : '')}>\n        <Map center={ position } style={mapStyle} zoom={zoom} zoomControl={false}>\n          <ZoomControl position=\"topright\" />\n          <TileLayer \n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          />\n          <Legend />\n          {/* { userMarker } */}\n          <Marker position={position} icon={ Icon(userIconColor) }>\n            <Popup>現在位置</Popup>\n          </Marker>\n\n          {listItems.filter((item) => distance(position[0], position[1], item.latitude, item.longitude) < 2).map((item) => (\n            <Marker \n              position={[item.latitude, item.longitude]}\n              icon={Icon(getColor(item.busiMemo, item.total))}\n              key={item.storeNm}\n            >\n              <Popup>\n                  <h1 className=\"list__card__body__title\">{ item.storeNm }</h1>\n                  { item.addr }<br />\n                  { item.busiMemo.replace(/.*(?:<br>|^)+\\*(.*)<br>/, '$1') }<br />\n                  剩餘數量：<span className={getColor(item.busiMemo.replace(/.*(?:<br>|^)+\\*(.*)<br>/, '$1'), item.total)}>{ item.total }</span>\n              </Popup>\n            </Marker>\n          ))}\n\n        </Map>\n      </div>\n    </>\n  )\n}\n\nexport default PostOfficeMap;\n","import React, { Component } from 'react';\nimport {\n  HashRouter, Switch, Route, Link,\n} from 'react-router-dom';\nimport { Navbar, Nav, NavLink } from 'react-bootstrap';\nimport SearchTable from './page/SearchTable';\nimport PostOfficeMap from './page/PostOfficeMap';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className='App'>\n          <Navbar  bg='dark' variant='dark' expand='lg' >\n              <Navbar.Brand  href='#'>振興券郵局庫存速查</Navbar.Brand>\n            <Nav>\n              <NavLink as={ Link } className='text-light' to=\"/\">表格</NavLink>\n              <NavLink as={ Link } className='text-light' to=\"/map\">地圖</NavLink>\n            </Nav>\n          </Navbar>\n          <Switch>\n            <Route exact path='/'>\n              <SearchTable />\n            </Route>\n            <Route path='/map'>\n              <PostOfficeMap />\n            </Route>\n          </Switch>\n          <footer className='bg-light position-fixed fixed-bottom text-center'>made by listennn08.</footer>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}